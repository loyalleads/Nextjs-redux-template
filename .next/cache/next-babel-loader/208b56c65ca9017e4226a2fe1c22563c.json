{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/ignite-next/pages/index.js\";\nimport LayoutDash from \"../components/LayoutDash\";\nimport { incrementCounter } from \"../redux/actions/counter\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport Card from '../components/card';\nimport Modal from '../components/modal';\n\nconst Index = props => {\n  var _props$data;\n\n  const {\n    counter,\n    increment\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-content-end flex-wrap\",\n        children: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.map(post => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            post: post\n          }, post.id.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nIndex.getInitialProps = async () => {\n  try {\n    console.log(\"api\");\n    const posts = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const data = await posts.json();\n    const photos = await fetch(\"http://jsonplaceholder.typicode.com/photos\");\n    const dataPhots = await photos.json();\n    const users = ['Mike Holms', 'Stiven Sigal', 'Martha Hines', 'James Bond', 'Sherif Butt'];\n    let mergedData = [];\n\n    for (let i = 0; i < data.length; i++) {\n      let _data = {\n        userId: data[i].userId,\n        userName: users[data[i].userId],\n        id: data[i].id,\n        title: data[i].title,\n        body: data[i].body,\n        albumId: dataPhots[i].albumId,\n        url: dataPhots[i].url,\n        thumbnailUrl: dataPhots[i].thumbnailUrl,\n        imgeTitle: dataPhots[i].title\n      };\n      mergedData = [...mergedData, _data];\n    }\n\n    return {\n      data: mergedData,\n      count: data.length\n    };\n  } catch (err) {\n    console.log({\n      err\n    });\n  }\n};\n\nconst mapStateToProps = state => ({\n  counter: state.counterReducer\n});\n\nconst mapDispatchToProps = {\n  increment: incrementCounter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/ignite-next/pages/index.js"],"names":["LayoutDash","incrementCounter","connect","Link","Card","Modal","Index","props","counter","increment","data","map","post","id","toString","getInitialProps","console","log","posts","fetch","json","photos","dataPhots","users","mergedData","i","length","_data","userId","userName","title","body","albumId","url","thumbnailUrl","imgeTitle","count","err","mapStateToProps","state","counterReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import LayoutDash from \"../components/LayoutDash\";\nimport { incrementCounter } from \"../redux/actions/counter\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\"\nimport Card from '../components/card'\nimport Modal from '../components/modal'\nconst Index = (props) => {\n  const { counter, increment } = props;\n  return (\n    <Layout>\n      \n      <div>\n        \n        <div className=\"d-flex align-content-end flex-wrap\">\n          {props.data?.map((post) => {\n            return <Card key={post.id.toString()} post={post} />;\n          })}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async () => {\n  try {\n    console.log(\"api\");\n    const posts = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const data = await posts.json();\n\n    const photos = await fetch(\"http://jsonplaceholder.typicode.com/photos\");\n\n    const dataPhots = await photos.json();\n    const users = ['Mike Holms','Stiven Sigal','Martha Hines','James Bond','Sherif Butt']\n    let mergedData = [];\n    \n    for (let i = 0; i < data.length; i++){\n      let _data = {\n        userId: data[i].userId,\n        userName: users[data[i].userId],\n        id: data[i].id,\n        title: data[i].title,\n        body: data[i].body,\n        albumId: dataPhots[i].albumId,\n        url: dataPhots[i].url,\n        thumbnailUrl: dataPhots[i].thumbnailUrl,\n        imgeTitle: dataPhots[i].title,\n      };\n        \n      mergedData = [...mergedData,_data];\n    }\n    \n    \n    return {\n      data:mergedData,\n      count: data.length\n    };\n  } catch (err) {\n    console.log({ err });\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  counter: state.counterReducer,\n});\n\nconst mapDispatchToProps = {\n  increment: incrementCounter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n"]},"metadata":{},"sourceType":"module"}