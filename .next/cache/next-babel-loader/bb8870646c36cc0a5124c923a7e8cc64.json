{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/ignite-next/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/Layout\";\nimport { incrementCounter } from \"../redux/actions/counter\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport Card from '../components/card';\nimport Modal from '../components/modal';\n\nconst Index = props => {\n  var _props$data;\n\n  const {\n    counter,\n    increment\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-content-end flex-wrap\",\n        children: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.map(post => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            post: post\n          }, post.id.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nIndex.getInitialProps = async () => {\n  try {\n    console.log(\"api\");\n    const posts = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const data = await posts.json();\n    const photos = await fetch(\"http://jsonplaceholder.typicode.com/photos\");\n    const dataPhots = await photos.json();\n    const users = ['Mike Holms', 'Stiven Sigal', 'Martha Hines', 'James Bond', 'Sherif Butt'];\n    let mergedData = []; // _data = {};\n\n    for (let i = 0; i < data.length; i++) {\n      const _data = _objectSpread(_objectSpread({}, data[i]), dataPhotos[i]);\n\n      mergedData = [...mergedData, _data];\n    }\n\n    return {\n      data: mergedData,\n      count: data.length\n    };\n  } catch (err) {\n    console.log({\n      err\n    });\n  }\n};\n\nconst mapStateToProps = state => ({\n  counter: state.counterReducer\n});\n\nconst mapDispatchToProps = {\n  increment: incrementCounter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/ignite-next/pages/index.js"],"names":["Layout","incrementCounter","connect","Link","Card","Modal","Index","props","counter","increment","data","map","post","id","toString","getInitialProps","console","log","posts","fetch","json","photos","dataPhots","users","mergedData","i","length","_data","dataPhotos","count","err","mapStateToProps","state","counterReducer","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBF,KAA/B;AACA,sBACE,QAAC,MAAD;AAAA,2BAEE;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA,iCACGA,KAAK,CAACG,IADT,gDACG,YAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACzB,8BAAO,QAAC,IAAD;AAA+B,YAAA,IAAI,EAAEA;AAArC,aAAWA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAX;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAfD;;AAiBAR,KAAK,CAACS,eAAN,GAAwB,YAAY;AAClC,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,UAAMC,KAAK,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAzB;AACA,UAAMT,IAAI,GAAG,MAAMQ,KAAK,CAACE,IAAN,EAAnB;AAEA,UAAMC,MAAM,GAAG,MAAMF,KAAK,CAAC,4CAAD,CAA1B;AAEA,UAAMG,SAAS,GAAG,MAAMD,MAAM,CAACD,IAAP,EAAxB;AACA,UAAMG,KAAK,GAAG,CAAC,YAAD,EAAc,cAAd,EAA6B,cAA7B,EAA4C,YAA5C,EAAyD,aAAzD,CAAd;AACA,QAAIC,UAAU,GAAG,EAAjB,CATE,CAUF;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,IAAI,CAACgB,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnC,YAAME,KAAK,mCACNjB,IAAI,CAACe,CAAD,CADE,GAENG,UAAU,CAACH,CAAD,CAFJ,CAAX;;AAIAD,MAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAeG,KAAf,CAAb;AACD;;AAED,WAAO;AACLjB,MAAAA,IAAI,EAACc,UADA;AAELK,MAAAA,KAAK,EAAEnB,IAAI,CAACgB;AAFP,KAAP;AAID,GAvBD,CAuBE,OAAOI,GAAP,EAAY;AACZd,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEa,MAAAA;AAAF,KAAZ;AACD;AACF,CA3BD;;AA6BA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCxB,EAAAA,OAAO,EAAEwB,KAAK,CAACC;AADmB,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG;AACzBzB,EAAAA,SAAS,EAAER;AADc,CAA3B;AAIA,eAAeC,OAAO,CAAC6B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C5B,KAA7C,CAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport { incrementCounter } from \"../redux/actions/counter\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\"\nimport Card from '../components/card'\nimport Modal from '../components/modal'\nconst Index = (props) => {\n  const { counter, increment } = props;\n  return (\n    <Layout>\n      \n      <div>\n        \n        <div className=\"d-flex align-content-end flex-wrap\">\n          {props.data?.map((post) => {\n            return <Card key={post.id.toString()} post={post} />;\n          })}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async () => {\n  try {\n    console.log(\"api\");\n    const posts = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const data = await posts.json();\n\n    const photos = await fetch(\"http://jsonplaceholder.typicode.com/photos\");\n\n    const dataPhots = await photos.json();\n    const users = ['Mike Holms','Stiven Sigal','Martha Hines','James Bond','Sherif Butt']\n    let mergedData = [];\n    // _data = {};\n    for (let i = 0; i < data.length; i++){\n      const _data = {\n        ...data[i],\n        ...dataPhotos[i]\n      };\n      mergedData = [...mergedData,_data];\n    }\n    \n    return {\n      data:mergedData,\n      count: data.length\n    };\n  } catch (err) {\n    console.log({ err });\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  counter: state.counterReducer,\n});\n\nconst mapDispatchToProps = {\n  increment: incrementCounter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n"]},"metadata":{},"sourceType":"module"}